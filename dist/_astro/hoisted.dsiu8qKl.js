import"./hoisted.lrI1EPAS.js";function u(c){return new Promise(e=>{let t=0;const s=50;function o(){t++;const i=document.getElementById(c);if(!i){t<s?setTimeout(o,50):e(null);return}const m=i.offsetWidth>0&&i.offsetHeight>0,d=i.getBoundingClientRect(),l=d.width>0&&d.height>0;m&&l?setTimeout(()=>{i.offsetWidth>0&&i.offsetHeight>0?(console.log(`容器就绪: ${i.offsetWidth}x${i.offsetHeight}`),e(i)):t<s?o():e(i)},50):t<s?setTimeout(o,50):e(i)}o()})}class g{constructor(){this.map=null,this.apiKey="8f7866712e18166a21b2ea28647375b9",this.securityJsCode="aa0ffaabb4e81b648858e25bd93b4236",this.cities=null,this.infoWindow=null,this.AMap=null,this._destroyed=!1,this.markers=[],this.polylines=[],this.resizeObserver=null}destroy(){if(this._destroyed=!0,this.resizeObserver&&(this.resizeObserver.disconnect(),this.resizeObserver=null),this.map){try{this.markers.forEach(t=>{t&&this.map.remove(t)}),this.polylines.forEach(t=>{t&&this.map.remove(t)}),this.infoWindow&&this.infoWindow.close(),this.map.destroy()}catch(t){console.warn("地图销毁时出错:",t)}this.map=null}this.markers=[],this.polylines=[],this.infoWindow=null,this.AMap=null;const e=document.getElementById("amap-container");e&&(e.innerHTML=""),this.showLoading()}async init(){this._destroyed=!1;try{console.log("开始地图初始化");const e=await u("amap-container");if(!e||this._destroyed)throw new Error("容器未找到或未就绪");if(this.securityJsCode&&(window._AMapSecurityConfig={securityJsCode:this.securityJsCode}),this.AMap=await this.loadAPI(),this._destroyed)return;if(await this.loadCities(),this._destroyed||!this.cities)throw new Error("城市数据加载失败");if(console.log("创建地图实例..."),this.map=new this.AMap.Map(e,{zoom:5,center:[104.0668,30.5728],mapStyle:"amap://styles/light",viewMode:"2D",resizeEnable:!0}),await this.waitForMapReady(),this._destroyed)return;console.log("添加地图标记..."),this.addMarkers(this.cities.visitedPlaces,"#dc3545"),this.addMarkers(this.cities.plannedPlaces,"#66b3ff"),this.addMarkers(this.cities.desiredPlaces,"#28a745"),this.plotPlannedRoutes(),this.setInitialView(),this.addMapEventListeners(),console.log("地图初始化完成")}catch(e){console.error("地图初始化失败:",e),this.showError(`地图加载失败: ${e.message}<br><small>请尝试刷新页面</small>`)}finally{this.hideLoading()}}waitForMapReady(){return new Promise(e=>{let t=0;const s=30,o=()=>{t++;try{if(this.map&&this.map.getContainer&&this.map.getSize){const i=this.map.getSize();if(i&&i.width>0&&i.height>0){console.log(`地图就绪: ${i.width}x${i.height}`),this.map.resize(),setTimeout(e,100);return}}}catch(i){console.warn("地图就绪检查出错:",i)}t<s?setTimeout(o,100):(console.warn("地图就绪检查超时，继续执行"),e())};o()})}setInitialView(){!this.map||this.markers.length===0||setTimeout(()=>{try{const e=[];if(this.markers.forEach(n=>{if(n&&n.getPosition){const a=n.getPosition();a&&typeof a.lng=="number"&&typeof a.lat=="number"&&e.push(a)}}),e.length===0){console.warn("没有有效的标记位置，使用默认视图"),this.map.setZoomAndCenter(5,[104.0668,30.5728]);return}console.log(`找到 ${e.length} 个有效标记位置`);const t=e.reduce((n,a)=>n+a.lng,0)/e.length,s=e.reduce((n,a)=>n+a.lat,0)/e.length,o=e.map(n=>n.lng),i=e.map(n=>n.lat),m=Math.max(...o)-Math.min(...o),d=Math.max(...i)-Math.min(...i),l=Math.max(m,d);let h=5;l<2?h=7:l<5?h=6:l<15?h=5:h=4,console.log(`设置地图视图: center=(${t.toFixed(4)}, ${s.toFixed(4)}), zoom=${h}, range=${l.toFixed(2)}`),this.map.setZoomAndCenter(h,[t,s]),setTimeout(()=>{const n=this.map.getCenter(),a=this.map.getZoom();console.log(`视图设置验证: center=(${n.lng.toFixed(4)}, ${n.lat.toFixed(4)}), zoom=${a}`)},500)}catch(e){console.error("设置初始视图失败:",e);try{this.map.setZoomAndCenter(5,[104.0668,30.5728]),console.log("使用默认视图设置")}catch(t){console.error("默认视图设置也失败:",t)}}},200)}async loadCities(){try{const e=await fetch("/data/cities.json");if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);this.cities=await e.json(),console.log(`城市数据加载成功: ${this.cities.visitedPlaces?.length||0}个已访问, ${this.cities.plannedPlaces?.length||0}个计划, ${this.cities.desiredPlaces?.length||0}个想去`)}catch(e){throw console.error("城市数据加载失败:",e),this.cities=null,e}}addMarkers(e,t){if(!e||!Array.isArray(e))return;let s=0;e.forEach(o=>{if(o.lng&&o.lat&&typeof o.lng=="number"&&typeof o.lat=="number")try{const i=new this.AMap.Marker({position:[o.lng,o.lat],title:o.name,content:`<div style="width: 14px; height: 14px; background: ${t}; border: 2px solid #fff; border-radius: 50%; box-shadow: 0 2px 6px rgba(0,0,0,0.4);"></div>`});i.on("click",()=>this.openInfoWindow(o)),this.map.add(i),this.markers.push(i),s++}catch(i){console.warn(`添加标记失败: ${o.name}`,i)}else console.warn(`无效的坐标数据: ${o.name}`,o)}),console.log(`添加了 ${s} 个标记，总计 ${this.markers.length} 个`)}openInfoWindow(e){this.infoWindow&&this.infoWindow.close();let t="";if(e.photo){const i=`<div style="width: 100%; height: 146px; overflow: hidden; border-radius: 8px; border: 1px solid #e9ecef; margin-top: 8px; display: block;"><img src="${e.photo}" alt="${e.name}" style="width: 100%; height: 100%; object-fit: cover; display: block;" onerror="this.parentElement.style.display='none'" /></div>`;t=e.article?`<a href="${e.article}" target="_blank" style="text-decoration: none;">${i}</a>`:i}let s=e.article&&!e.photo?`<p><a href="${e.article}" target="_blank">阅读相关文章</a></p>`:"";const o=`
      <div class="custom-info-window">
        <span class="custom-info-window-close">&times;</span>
        <h3>${e.name}</h3>
        <p>${e.description}</p>
        ${t}
        ${s}
      </div>`;this.infoWindow=new this.AMap.InfoWindow({isCustom:!0,content:o,anchor:"bottom-center",offset:new this.AMap.Pixel(0,-10)}),this.infoWindow.open(this.map,[e.lng,e.lat]),setTimeout(()=>{const i=document.querySelector(".custom-info-window-close");i&&(i.onclick=()=>{this.infoWindow&&this.infoWindow.close()})},0)}plotPlannedRoutes(){if(!this.cities||!this.cities.plannedPlaces)return;this.cities.plannedPlaces.filter(t=>t.path&&t.path.length>0).forEach(t=>{try{const s=t.path.map(i=>[i.lng,i.lat]),o=new this.AMap.Polyline({path:s,strokeColor:"#66b3ff",strokeWeight:4,strokeOpacity:.7,strokeStyle:"solid",map:this.map});this.polylines.push(o)}catch(s){console.warn("添加路线失败:",t.name,s)}})}addMapEventListeners(){if(this.map&&window.ResizeObserver){const e=this.map.getContainer();e&&(this.resizeObserver=new ResizeObserver(()=>{this.map&&!this._destroyed&&(clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout(()=>{this.map.resize()},200))}),this.resizeObserver.observe(e))}}async loadAPI(){return new Promise((e,t)=>{if(window.AMap)return console.log("高德地图API已存在"),e(window.AMap);const s=document.createElement("script");s.src=`https://webapi.amap.com/maps?v=2.0&key=${this.apiKey}&plugin=AMap.Polyline`,s.async=!0,s.onload=()=>{window.AMap?(console.log("高德地图API加载成功"),e(window.AMap)):t(new Error("AMap API 加载失败"))},s.onerror=()=>t(new Error("网络错误，无法加载高德地图API")),document.head.appendChild(s)})}showLoading(){const e=document.getElementById("map-loading");e&&(e.style.display="flex")}hideLoading(){const e=document.getElementById("map-loading");e&&(e.style.display="none")}showError(e){this.hideLoading();const t=document.getElementById("amap-container");t&&(t.innerHTML=`
        <div style="text-align: center; padding: 40px; color: #666; font-size: 14px; line-height: 1.6;">
          <div style="font-size: 48px; margin-bottom: 16px;">🗺️</div>
          ${e}
        </div>`)}}let r=null;async function f(){document.getElementById("amap-container")&&(r&&(r.destroy(),r=null),r=new g,await r.init())}document.addEventListener("astro:page-load",()=>{console.log("astro:page-load 事件触发"),setTimeout(f,100)});document.addEventListener("astro:before-preparation",()=>{console.log("astro:before-preparation 事件触发"),r&&(r.destroy(),r=null)});document.addEventListener("DOMContentLoaded",()=>{console.log("DOMContentLoaded 事件触发"),r||setTimeout(f,200)});let p;window.addEventListener("resize",()=>{r&&r.map&&(clearTimeout(p),p=setTimeout(()=>{console.log("窗口大小改变，调整地图"),r.map.resize()},300))});
