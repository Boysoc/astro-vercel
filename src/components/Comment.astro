---
---

<div id="waline-comment"></div>

<script>
  // 加载Waline CSS
  function loadWalineCSS() {
    if (document.querySelector('link[href*="waline"]')) return;
    
    const link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://unpkg.com/@waline/client@v3/dist/waline.css';
    document.head.appendChild(link);
  }

  // 动态加载Waline
  async function loadWaline() {
    // 先加载CSS
    loadWalineCSS();
    
    // 检查是否已经加载过
    if (window.WalineInit) {
      initWaline();
      return;
    }

    try {
      // 动态导入Waline
      const { init } = await import('https://unpkg.com/@waline/client@v3/dist/waline.js');
      window.WalineInit = init;
      
      // 等待CSS加载完成
      setTimeout(() => {
        initWaline();
      }, 800);
    } catch (error) {
      console.error('Waline加载失败:', error);
      // 尝试备用CDN
      try {
        const { init } = await import('https://cdn.jsdelivr.net/npm/@waline/client@v3/dist/waline.js');
        window.WalineInit = init;
        setTimeout(() => {
          initWaline();
        }, 800);
      } catch (fallbackError) {
        console.error('备用CDN也失败:', fallbackError);
        const container = document.getElementById('waline-comment');
        if (container) {
          container.innerHTML = '<p style="text-align: center; color: #999; padding: 2rem;">评论系统加载失败，请检查网络连接后刷新页面</p>';
        }
      }
    }
  }

  function initWaline() {
    const container = document.getElementById('waline-comment');
    if (!container || !window.WalineInit) {
      console.log('容器或Waline未准备好');
      return;
    }

    // 清空容器
    container.innerHTML = '';

    // 获取当前主题
    const getCurrentTheme = () => {
      return document.documentElement.getAttribute('data-theme') || 'light';
    };

    const currentTheme = getCurrentTheme();
    console.log('初始化Waline，当前主题:', currentTheme);

    try {
      console.log('开始初始化Waline，服务器地址:', 'https://leanvercelwaline.n2g.cn/');
      console.log('当前页面路径:', window.location.pathname);
      
      // 自定义时间格式化函数
      const formatTime = (dateInput) => {
        try {
          let date;
          
          if (typeof dateInput === 'string') {
            if (dateInput.includes('T') && dateInput.includes('Z')) {
              date = new Date(dateInput);
            } else if (dateInput.match(/^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$/)) {
              date = new Date(dateInput.replace(' ', 'T') + 'Z');
            } else if (dateInput.match(/^\d{4}-\d{2}-\d{2}$/)) {
              date = new Date(dateInput + 'T00:00:00Z');
            } else {
              date = new Date(dateInput);
            }
          } else if (typeof dateInput === 'number') {
            date = new Date(dateInput);
          } else if (dateInput instanceof Date) {
            date = dateInput;
          } else {
            date = new Date();
          }

          if (isNaN(date.getTime())) {
            console.warn('无效的日期:', dateInput);
            return '时间未知';
          }

          // 格式化为 YYYY年MM月DD日 HH:mm:ss
          const year = date.getFullYear();
          const month = String(date.getMonth() + 1).padStart(2, '0');
          const day = String(date.getDate()).padStart(2, '0');
          const hours = String(date.getHours()).padStart(2, '0');
          const minutes = String(date.getMinutes()).padStart(2, '0');
          const seconds = String(date.getSeconds()).padStart(2, '0');
          
          return `${year}年${month}月${day}日 ${hours}:${minutes}:${seconds}`;
          
        } catch (error) {
          console.error('时间格式化错误:', error, dateInput);
          return '时间解析失败';
        }
      };

      // 初始化Waline
      const waline = window.WalineInit({
        el: '#waline-comment',
        serverURL: 'https://leanvercelwaline.n2g.cn/',
        path: window.location.pathname,
        placeholder: '请留下你的足迹~',
        avatar: 'monsterid',
        meta: ['nick', 'mail', 'link'],
        requiredMeta: ['nick'],
        login: 'disable',
        wordLimit: 0,
        pageSize: 10,
        lang: 'zh-CN',
        locale: {
          sofa: '来发评论吧~',
          submit: '提交',
          reply: '回复',
          cancelReply: '取消回复',
          comment: '评论',
          refresh: '刷新',
          more: '加载更多...',
          preview: '预览',
          emoji: '表情'
        },
        dark: currentTheme === 'dark',
        emoji: [
          'https://unpkg.com/@waline/emojis@1.2.0/qq'
        ],
        imageUploader: false,
        copyright: false,
        reaction: false,
        search: false,
        // 使用自定义时间格式化函数
        formatTime: formatTime
      });

      console.log('Waline初始化成功');
      
      // 调试：检查Waline DOM结构
      setTimeout(() => {
        console.log('=== Waline DOM 结构调试 ===');
        const container = document.getElementById('waline-comment');
        if (container) {
          console.log('评论容器:', container);
          console.log('容器内容:', container.innerHTML.substring(0, 500));
          
          // 检查各种可能的选择器
          const selectors = ['.wl-head', '.wl-meta', '.wl-card', '.wl-item', '.wl-nick', '.wl-time'];
          selectors.forEach(selector => {
            const elements = container.querySelectorAll(selector);
            console.log(`${selector}: ${elements.length} 个元素`);
          });
        }
      }, 3000);

      // 确保时间格式正确显示 - 持续监控
      const formatAllTimes = () => {
        const timeElements = document.querySelectorAll('.wl-time');
        timeElements.forEach(timeEl => {
          const datetimeAttr = timeEl.getAttribute('datetime');
          const currentText = timeEl.textContent;
          
          // 如果包含特殊符号或相对时间，重新格式化
          if (datetimeAttr && (currentText.includes('$') || currentText.includes('前') || currentText === '刚刚')) {
            const formattedTime = formatTime(datetimeAttr);
            timeEl.textContent = formattedTime;
          } else if (datetimeAttr && !currentText.includes('年')) {
            // 如果没有年份显示，也重新格式化
            const formattedTime = formatTime(datetimeAttr);
            timeEl.textContent = formattedTime;
          }
        });
      };

      // 初始格式化
      setTimeout(formatAllTimes, 1000);
      
      // 定期检查并格式化新加载的评论
      const timeFormatInterval = setInterval(formatAllTimes, 2000);
      
      // 获取IP地理位置信息
      const getLocationInfo = async () => {
        try {
          const response = await fetch('https://ipapi.co/json/');
          const data = await response.json();
          return {
            city: data.city || '',
            region: data.region || '',
            country: data.country_name || ''
          };
        } catch (error) {
          console.log('获取地理位置失败:', error);
          try {
            // 备用API
            const response = await fetch('https://ip-api.com/json/');
            const data = await response.json();
            return {
              city: data.city || '',
              region: data.regionName || '',
              country: data.country || ''
            };
          } catch (fallbackError) {
            console.log('备用API也失败:', fallbackError);
            return null;
          }
        }
      };

      // 添加地理位置信息到评论
      const addLocationToComments = async () => {
        console.log('开始获取地理位置信息...');
        
        let locationInfo = null;
        try {
          // 使用免费的IP地理位置API
          const response = await fetch('https://ipinfo.io/json');
          const data = await response.json();
          console.log('获取到的地理位置数据:', data);
          
          locationInfo = {
            city: data.city || '',
            region: data.region || '',
            country: data.country || ''
          };
        } catch (error) {
          console.log('ipinfo.io失败，尝试备用API:', error);
          try {
            const response = await fetch('https://api.ipify.org?format=json');
            const ipData = await response.json();
            console.log('获取到IP:', ipData.ip);
            
            // 简单显示IP信息
            locationInfo = {
              city: '',
              region: ipData.ip ? `IP: ${ipData.ip}` : '',
              country: ''
            };
          } catch (fallbackError) {
            console.log('所有API都失败了:', fallbackError);
            return;
          }
        }

        if (!locationInfo) return;

        const formatLocation = () => {
          if (locationInfo.city && locationInfo.region) {
            return `${locationInfo.region} ${locationInfo.city}`;
          } else if (locationInfo.region) {
            return locationInfo.region;
          } else if (locationInfo.country) {
            return locationInfo.country;
          }
          return '';
        };

        const locationText = formatLocation();
        console.log('格式化后的地理位置:', locationText);
        
        if (!locationText) return;

        // 定期检查并添加地理位置信息
        let attempts = 0;
        const maxAttempts = 10;
        
        const addLocationInterval = setInterval(() => {
          attempts++;
          console.log(`尝试添加地理位置信息 (${attempts}/${maxAttempts})`);
          
          // 尝试多种选择器
          const selectors = [
            '.wl-head',
            '.wl-meta', 
            '.wl-card .wl-nick',
            '.wl-item .wl-nick'
          ];
          
          let found = false;
          
          for (const selector of selectors) {
            const elements = document.querySelectorAll(selector);
            console.log(`选择器 ${selector} 找到 ${elements.length} 个元素`);
            
            elements.forEach((element, index) => {
              // 检查是否已经添加过地理位置
              if (element.querySelector('.wl-location-info') || 
                  element.parentNode.querySelector('.wl-location-info')) {
                return;
              }

              // 查找时间元素
              let timeElement = element.querySelector('.wl-time');
              if (!timeElement) {
                timeElement = element.parentNode.querySelector('.wl-time');
              }
              
              if (timeElement) {
                console.log(`在第${index}个元素中找到时间元素，添加地理位置`);
                
                const locationSpan = document.createElement('span');
                locationSpan.className = 'wl-location-info';
                locationSpan.textContent = locationText;
                locationSpan.title = '评论者地理位置';
                
                // 使用内联样式确保显示
                locationSpan.style.cssText = `
                  color: #666 !important;
                  opacity: 0.8 !important;
                  font-size: 11px !important;
                  margin-left: 8px !important;
                  padding: 2px 6px !important;
                  background-color: #f0f0f0 !important;
                  border-radius: 10px !important;
                  display: inline-block !important;
                  border: 1px solid #ddd !important;
                `;
                
                // 插入到时间元素后面
                if (timeElement.nextSibling) {
                  timeElement.parentNode.insertBefore(locationSpan, timeElement.nextSibling);
                } else {
                  timeElement.parentNode.appendChild(locationSpan);
                }
                
                found = true;
              }
            });
          }
          
          if (found || attempts >= maxAttempts) {
            console.log(found ? '成功添加地理位置信息' : '达到最大尝试次数，停止添加');
            clearInterval(addLocationInterval);
          }
        }, 1000);
      };

      // 延迟执行地理位置添加
      setTimeout(addLocationToComments, 2000);

      // 监听评论区变化
      const commentObserver = new MutationObserver(() => {
        setTimeout(formatAllTimes, 500);
        setTimeout(addLocationToComments, 1000);
      });
      
      commentObserver.observe(container, {
        childList: true,
        subtree: true
      });

      // 监听主题变化
      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (mutation.type === 'attributes' && mutation.attributeName === 'data-theme') {
            const newTheme = getCurrentTheme();
            console.log('主题切换到:', newTheme);
            
            // 重新初始化Waline以应用新主题
            setTimeout(() => {
              initWaline();
            }, 100);
          }
        });
      });

      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['data-theme']
      });

      return waline;
    } catch (error) {
      console.error('Waline初始化失败:', error);
      container.innerHTML = '<p style="text-align: center; color: #999; padding: 2rem;">评论系统初始化失败</p>';
    }
  }

  // 页面加载完成后初始化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', loadWaline);
  } else {
    loadWaline();
  }

  // Astro页面切换时重新初始化
  document.addEventListener('astro:page-load', () => {
    setTimeout(loadWaline, 100);
  });

  document.addEventListener('astro:after-swap', () => {
    setTimeout(loadWaline, 100);
  });
</script>

<style>
  #waline-comment {
    margin-top: 2rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border-color);
  }

  /* 基础样式适配 */
  :global(.wl-container) {
    font-family: inherit !important;
    color: var(--text-color) !important;
    max-width: 100% !important;
  }

  :global(.wl-editor) {
    background-color: var(--bg-color) !important;
    border: 1px solid var(--border-color) !important;
    border-radius: 6px !important;
    color: var(--text-color) !important;
    font-family: inherit !important;
    padding: 12px !important;
    font-size: 14px !important;
    line-height: 1.5 !important;
    min-height: 80px !important;
    resize: vertical !important;
  }

  :global(.wl-editor:focus) {
    border-color: var(--link-color) !important;
    outline: none !important;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25) !important;
  }

  /* 修复字数统计显示 */
  :global(.wl-count) {
    color: var(--text-color) !important;
    font-size: 12px !important;
    margin: 8px 0 !important;
    text-align: right !important;
    opacity: 0.7 !important;
    display: block !important;
    visibility: visible !important;
  }

  /* 确保字数统计容器正确显示 */
  :global(.wl-num) {
    display: inline !important;
    color: var(--text-color) !important;
    opacity: 0.7 !important;
    font-size: 12px !important;
  }

  /* 修复字数统计在不同浏览器的兼容性 */
  :global(.wl-editor-wrapper) {
    position: relative !important;
  }

  :global(.wl-editor-wrapper .wl-count) {
    position: absolute !important;
    bottom: -20px !important;
    right: 0 !important;
    font-size: 11px !important;
    color: var(--text-color) !important;
    opacity: 0.6 !important;
  }

  /* 修复输入框区域 */
  :global(.wl-input) {
    background-color: var(--bg-color) !important;
    border: 1px solid var(--border-color) !important;
    border-radius: 4px !important;
    color: var(--text-color) !important;
    padding: 6px 8px !important;
    font-size: 13px !important;
    font-family: inherit !important;
  }

  :global(.wl-input:focus) {
    border-color: var(--link-color) !important;
    outline: none !important;
  }

  /* 修复头像和用户信息区域 */
  :global(.wl-header) {
    display: flex !important;
    align-items: flex-start !important;
    gap: 12px !important;
    margin-bottom: 12px !important;
  }

  :global(.wl-avatar) {
    width: 40px !important;
    height: 40px !important;
    border-radius: 50% !important;
    flex-shrink: 0 !important;
  }

  /* 修复表单区域 */
  :global(.wl-panel) {
    background-color: var(--card-bg) !important;
    border: 1px solid var(--border-color) !important;
    border-radius: 8px !important;
    padding: 16px !important;
    margin-bottom: 20px !important;
  }

  :global(.wl-btn) {
    background-color: var(--text-color) !important;
    color: var(--bg-color) !important;
    border: none !important;
    border-radius: 4px !important;
    padding: 8px 16px !important;
    font-size: 14px !important;
    font-family: inherit !important;
    transition: opacity 0.2s ease !important;
    cursor: pointer !important;
    display: inline-block !important;
  }

  :global(.wl-btn:hover) {
    opacity: 0.8 !important;
  }

  :global(.wl-btn:disabled) {
    opacity: 0.5 !important;
    cursor: not-allowed !important;
  }

  :global(.wl-card) {
    background-color: var(--card-bg) !important;
    border: 1px solid var(--border-color) !important;
    border-radius: 8px !important;
    box-shadow: 0 1px 3px var(--shadow-color) !important;
    margin-bottom: 1rem !important;
    padding: 1rem !important;
  }

  :global(.wl-nick) {
    color: var(--heading-color) !important;
    font-weight: 600 !important;
    font-size: 14px !important;
  }

  :global(.wl-time) {
    color: var(--text-color) !important;
    opacity: 0.6 !important;
    font-size: 12px !important;
    font-weight: 400 !important;
    margin-left: 8px !important;
    position: relative !important;
  }

  /* 去掉时间图标 */
  :global(.wl-time::before) {
    display: none !important;
  }

  /* 自定义地理位置样式 */
  :global(.wl-location-info) {
    color: var(--text-color) !important;
    opacity: 0.6 !important;
    font-size: 11px !important;
    margin-left: 8px !important;
    padding: 2px 6px !important;
    background-color: var(--border-color) !important;
    border-radius: 10px !important;
    display: inline-block !important;
    transition: opacity 0.2s ease !important;
  }

  /* 地理位置悬停效果 */
  :global(.wl-location-info:hover) {
    opacity: 0.8 !important;
  }

  /* 深色主题下的地理位置样式 */
  [data-theme="dark"] :global(.wl-location-info) {
    background-color: rgba(255, 255, 255, 0.1) !important;
    color: var(--text-color) !important;
  }

  /* 隐藏版权标记 */
  :global(.wl-power) {
    display: none !important;
  }

  /* 隐藏GIF搜索功能 */
  :global(.wl-gif) {
    display: none !important;
  }

  :global(.wl-gif-btn) {
    display: none !important;
  }

  :global([title*="GIF"]) {
    display: none !important;
  }

  /* 确保表情和按钮功能正常显示 */
  :global(.wl-emoji-btn) {
    display: inline-block !important;
  }

  :global(.wl-emoji) {
    display: block !important;
  }

  :global(.wl-actions) {
    display: flex !important;
  }

  /* 时间悬停效果 */
  :global(.wl-time:hover) {
    opacity: 0.9 !important;
    transition: opacity 0.2s ease !important;
  }

  /* 相对时间样式 */
  :global(.wl-time[title]) {
    cursor: help !important;
    border-bottom: 1px dotted var(--text-color) !important;
    border-opacity: 0.3 !important;
  }

  :global(.wl-content) {
    color: var(--text-color) !important;
    line-height: 1.6 !important;
    margin-top: 0.5rem !important;
    font-size: 14px !important;
  }

  :global(.wl-content p) {
    margin: 0.5rem 0 !important;
  }

  :global(.wl-meta) {
    border-top: 1px solid var(--border-color) !important;
    padding-top: 0.5rem !important;
    margin-top: 0.5rem !important;
  }

  :global(.wl-loading) {
    text-align: center !important;
    padding: 2rem !important;
    color: var(--text-color) !important;
    opacity: 0.7 !important;
  }

  :global(.wl-empty) {
    text-align: center !important;
    padding: 2rem !important;
    color: var(--text-color) !important;
    opacity: 0.7 !important;
  }

  /* 深色主题适配 */
  [data-theme="dark"] :global(.wl-editor) {
    background-color: var(--card-bg) !important;
    border-color: var(--border-color) !important;
    color: var(--text-color) !important;
  }

  [data-theme="dark"] :global(.wl-card) {
    background-color: var(--card-bg) !important;
    border-color: var(--border-color) !important;
  }

  [data-theme="dark"] :global(.wl-btn) {
    background-color: var(--text-color) !important;
    color: var(--bg-color) !important;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    #waline-comment {
      margin-top: 1.5rem;
      padding-top: 1.5rem;
      padding-left: 0 !important;
      padding-right: 0 !important;
    }

    :global(.wl-container) {
      padding: 0 !important;
      margin: 0 !important;
      max-width: 100% !important;
    }

    :global(.wl-editor) {
      font-size: 14px !important;
      padding: 10px !important;
      min-height: 60px !important;
      width: 100% !important;
      box-sizing: border-box !important;
    }

    :global(.wl-panel) {
      padding: 12px !important;
      margin: 0 0 15px 0 !important;
      border-radius: 6px !important;
    }

    :global(.wl-header) {
      flex-direction: column !important;
      gap: 8px !important;
    }

    :global(.wl-header-item) {
      width: 100% !important;
      margin-bottom: 8px !important;
    }

    :global(.wl-input) {
      width: 100% !important;
      margin-bottom: 8px !important;
      padding: 8px !important;
      font-size: 14px !important;
      box-sizing: border-box !important;
    }

    :global(.wl-btn) {
      padding: 8px 16px !important;
      font-size: 14px !important;
      width: auto !important;
      margin: 5px 5px 5px 0 !important;
    }

    :global(.wl-card) {
      padding: 12px !important;
      margin-bottom: 12px !important;
      border-radius: 6px !important;
    }

    :global(.wl-avatar) {
      width: 32px !important;
      height: 32px !important;
    }

    :global(.wl-nick) {
      font-size: 13px !important;
    }

    :global(.wl-time) {
      font-size: 11px !important;
      margin-left: 0 !important;
      margin-top: 4px !important;
      display: block !important;
    }

    :global(.wl-location-info) {
      font-size: 10px !important;
      margin-left: 0 !important;
      margin-top: 2px !important;
      display: inline-block !important;
      padding: 1px 4px !important;
    }

    :global(.wl-content) {
      font-size: 13px !important;
      line-height: 1.5 !important;
      word-break: break-word !important;
    }

    :global(.wl-meta) {
      flex-wrap: wrap !important;
      gap: 8px !important;
    }

    :global(.wl-count) {
      font-size: 11px !important;
      text-align: left !important;
      margin: 5px 0 !important;
    }

    /* 修复输入框布局 */
    :global(.wl-info) {
      display: flex !important;
      flex-direction: column !important;
      gap: 8px !important;
      margin-bottom: 12px !important;
    }

    :global(.wl-info .wl-input) {
      flex: none !important;
      width: 100% !important;
    }

    /* 修复按钮区域 */
    :global(.wl-actions) {
      display: flex !important;
      flex-wrap: wrap !important;
      gap: 8px !important;
      justify-content: flex-start !important;
    }

    /* 修复表情和工具栏 */
    :global(.wl-emoji) {
      max-width: 100% !important;
      overflow-x: auto !important;
    }

    :global(.wl-tabs) {
      flex-wrap: wrap !important;
    }
  }

  /* 超小屏幕优化 */
  @media (max-width: 480px) {
    #waline-comment {
      margin-top: 1rem;
      padding-top: 1rem;
    }

    :global(.wl-editor) {
      min-height: 50px !important;
      font-size: 13px !important;
      padding: 8px !important;
    }

    :global(.wl-panel) {
      padding: 10px !important;
    }

    :global(.wl-btn) {
      padding: 6px 12px !important;
      font-size: 13px !important;
    }

    :global(.wl-card) {
      padding: 10px !important;
    }

    :global(.wl-content) {
      font-size: 12px !important;
    }
  }
</style>