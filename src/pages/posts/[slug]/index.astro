---
// 导入所需模块和函数
import { type CollectionEntry, getCollection } from "astro:content";
import Posts from "@layouts/Posts.astro";
import PostDetails from "@layouts/PostDetails.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

// 定义传递给页面的属性类型
export interface Props {
  post: CollectionEntry<"blog">;
  prev?: CollectionEntry<"blog">; // 添加前一篇文章的属性
  next?: CollectionEntry<"blog">; // 添加后一篇文章的属性
}

// 生成静态路径并为每篇文章提供前一篇和后一篇的信息
export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => !data.draft);
  const sortedPosts = getSortedPosts(posts);  // 确保使用排序后的文章列表

  const paths = sortedPosts.map((post, index) => {
    const prev = sortedPosts[index - 1] || null;
    const next = sortedPosts[index + 1] || null;
    return {
      params: { slug: post.slug },
      props: { post, prev, next },
    };
  });
  return paths;
}

// 从 Astro 全局获取参数和属性
const { slug } = Astro.params;
const { post, prev, next } = Astro.props;

const posts = await getCollection("blog");
const sortedPosts = getSortedPosts(posts);
const pagination = getPagination({
  posts: sortedPosts,
  page: slug,
});
---

<!-- 页面布局和内容展示 -->
{post ? (
  <PostDetails 
  post={post}
  prev={prev}
  next={next}
  />
) : (
  <Posts {...pagination} />
)}